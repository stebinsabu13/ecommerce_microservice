// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/stebinsabu13/ecommerce_microservice/order_service/pkg/api"
	"github.com/stebinsabu13/ecommerce_microservice/order_service/pkg/api/service"
	"github.com/stebinsabu13/ecommerce_microservice/order_service/pkg/client"
	"github.com/stebinsabu13/ecommerce_microservice/order_service/pkg/config"
	"github.com/stebinsabu13/ecommerce_microservice/order_service/pkg/db"
	"github.com/stebinsabu13/ecommerce_microservice/order_service/pkg/repository"
)

// Injectors from wire.go:

func InitializeServe(c *config.Config) (*api.Server, error) {
	gormDB, err := db.Initdb(c)
	if err != nil {
		return nil, err
	}
	oderRepo := repository.NewOrderRepo(gormDB)
	cartServiceClient, err := client.InitClient(c)
	if err != nil {
		return nil, err
	}
	cartClient := client.NewCartClient(cartServiceClient)
	productServiceClient, err := client.InitProdClient(c)
	if err != nil {
		return nil, err
	}
	productClient := client.NewProdClient(productServiceClient)
	authServiceClient, err := client.InitauthClient(c)
	if err != nil {
		return nil, err
	}
	authClient := client.NewAuthClient(authServiceClient)
	orderServiceServer := service.NewOrderService(oderRepo, cartClient, productClient, authClient)
	server, err := api.NewgrpcServe(c, orderServiceServer)
	if err != nil {
		return nil, err
	}
	return server, nil
}
